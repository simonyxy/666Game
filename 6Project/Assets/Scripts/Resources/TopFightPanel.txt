--[[
    @desc: 控制战斗界面
    @author:yxy
    @ -- 很多变量都是大写开头，用来便于区分六七组（两份代码结构很像）
]]
UnityEngine.Time.fixedDeltaTime = 0.1
local TopFightPanel = TopFightPanel or {}
-- local XXL = require "XXL"
function TopFightPanel:new()
    o = o or {}
    setmetatable( o, { __index = self }) 
    return o  
end

function TopFightPanel:Init()
    --事件机制
    EventSystem:GetInstance():init()
    --获得当前关卡
    local level = 1
    --生成关卡数据
    self:InitData(level)
    --生成Panel
    self:InitPanel()
end

function TopFightPanel:InitData()
    self.EnemyData = {}
    self.PlayerData= {}
    self.RoundData = {}  --这个是消消乐每回合传递过来的数据
    self.EnemyData = require "EnemyData"
    self.PlayerData= require "PlayerData"
    --todo：获得当前等级
    self.PlayerData.Level_cur = 1 
    --初始化玩家总值
    self.PlayerData.Power = self.PlayerData["Level_".. self.PlayerData.Level_cur].Power
    self.PlayerData.Hp_total = self.PlayerData["Level_".. self.PlayerData.Level_cur].Hp_total
    self.PlayerData.Shield_total = self.PlayerData["Level_"..self.PlayerData.Level_cur].Shield_total
    --初始化玩家当前值
    self.PlayerData.HP_cur= self.PlayerData.Hp_total
    self.PlayerData.Shield_cur = self.PlayerData.Shield_total
    self.PlayerData.Foot_cur     =  1
    --初始化怪物总值
    self.EnemyData.Power    = self.EnemyData["Level_".. self.PlayerData.Level_cur].Power
    self.EnemyData.Hp_total = self.EnemyData["Level_".. self.PlayerData.Level_cur].Hp_total
    self.EnemyData.Shield_total = self.EnemyData["Level_"..self.PlayerData.Level_cur].Shield_total
    --初始化怪物当前值
    self.EnemyData.Hp_cur =self.EnemyData.Hp_total
    self.EnemyData.Shield_cur = self.EnemyData.Shield_total
    self.bossisDeath = false
    self.EnemyData.FightRound_cur = 1 --初始化回合
end

function TopFightPanel:GetInstance()
    if TopFightPanel.Instance then
        return TopFightPanel.Instance
    end
    TopFightPanel.Instance = self
    return TopFightPanel.Instance
end
function TopFightPanel:InitPanel()
    --玩家获得组件
    self.Main    = GameObject.Find("GuildCrushWindow")
    self.C_Player= GameObject.Find("GuildCrushWindow/TopPanel/C_Player")
    self.Boss    = GameObject.Find("GuildCrushWindow/TopPanel/Enemy/Boss")
    self.Enemy   = GameObject.Find("GuildCrushWindow/TopPanel/Enemy")
    self.EnemyAttackImage = GameObject.Find("GuildCrushWindow/TopPanel/Enemy/EnemyAttack"):GetComponent(Image)
    self.LosePanel=self.Main.transform:Find("LosePanel").gameObject
    self.WinPanel =self.Main.transform:Find("WinPanel").gameObject
    self.winBtn   =self.WinPanel.transform:Find("winBtn").gameObject
    self.bigattack_obj= self.Main.transform:Find("TopPanel/BigAttacking").gameObject
    self.bigattack_btn = self.bigattack_obj.transform:Find("ClickImage").gameObject:GetComponent(Button)
    self.WinPanel:SetActive(false)
    self.LosePanel:SetActive(false)
    self.bigattack_obj:SetActive(false)
    self.FireBall =self.C_Player.transform:Find("fireball").gameObject
    --玩家相关
    self.Player  = self.C_Player.transform:Find("Player").gameObject
    self.hp      = self.C_Player.transform:Find("Hp").gameObject
    self.Foot  = self.C_Player.transform:Find("Foot").gameObject
    self.Shield  = self.C_Player.transform:Find("Shield").gameObject
    self.BigAttack= self.C_Player.transform:Find("BigAttack").gameObject
    self.ShieldFightBack = self.Main.transform:Find("TopPanel/ShieldFightBack").gameObject
    -- self.hitImage= self.FireBall.transform:Find("hitImage").gameObject
    self.hpAddText     = self.hp.transform:Find("hpAddText").gameObject:GetComponent(Text)
    self.EnemyGetHitobj = self.Main.transform:Find("TopPanel/Enemy/EnemyGetHitTest").gameObject
    self.PlayerGetHitobj= self.C_Player.transform:Find("PlayerGetHitTest").gameObject
    self.PlayerGetHitTest=self.PlayerGetHitobj:GetComponent(Text)
    self.EnemyGetHitTest = self.EnemyGetHitobj:GetComponent(Text)
    
    self.ShieldText = self.Shield.transform:Find("ShieldText").gameObject:GetComponent(Text)
    self.ShieldText.text = self.PlayerData.Item.Shield
    self.hpAddText.text= "+"..math.ceil(self.PlayerData.Hp_total * 0.2)
    
    self.Playerrect  = self.C_Player.transform
    self.FireBallrect= self.FireBall.transform
    self.BossAnim    = self.Boss:GetComponent(Animator)
    self.PlayerAnim  = self.C_Player:GetComponent(Animator)
    self.ShieldFightBack:SetActive(false)
    self.hp:SetActive(false)
    self.EnemyGetHitobj:SetActive(false)
    self.PlayerGetHitobj:SetActive(false)
    self.hp:SetActive(false)
    self.Foot:SetActive(false)
    self.Shield:SetActive(false)
    self.BigAttack:SetActive(false)
    self.EnemyAttackImage.gameObject:SetActive(false)

    --怪物相关
    self.AttackCountDown      = GameObject.Find("GuildCrushWindow/TopPanel/Enemy/Boss/AttackCountDown")
    self.EnemyNextMoveImage   = self.AttackCountDown:GetComponent(Image)
    self.AttackCountDown.gameObject:SetActive(true)
    self.GetHitImage4         = self.Boss.transform:Find("GetHitImage/Hit4").gameObject
    self.GetHitImage8         = self.Boss.transform:Find("GetHitImage/Hit8").gameObject
    self.GetHitImage12        = self.Boss.transform:Find("GetHitImage/Hit12").gameObject
    self.GetHpAdd14           = self.C_Player.transform:Find("GetHpAdd14").gameObject
    --UI
    self.UIState     = GameObject.Find("GuildCrushWindow/TopPanel/UIState")
    self.Hp_text     = self.UIState.transform:Find("Hp_text/Hp_text").gameObject:GetComponent(Text)
    self.Level_text  = self.UIState.transform:Find("Level_text/Level_text (1)").gameObject:GetComponent(Text)
    
    --怪物相关组件
    self.BossHpBar = self.UIState.transform:Find("BossHpBg/BossHpBar").gameObject:GetComponent(Image)
    self.BossHpLoad= self.UIState.transform:Find("BossHpBg/BossHpLoad").gameObject:GetComponent(Image)
    self.BossHpText= self.UIState.transform:Find("BossHpBg/BossHpText").gameObject:GetComponent(Text)
    self.Hp_text_Bar=self.UIState.transform:Find("Hp_text/Hp_text_Bar").gameObject:GetComponent(Image)
    self.normalImage= self.Player:GetComponent(Image)

    self.BossHpText.text = self.EnemyData.Hp_cur .. "/" .. self.EnemyData.Hp_total
    self.BossHpBar.fillAmount = self.EnemyData.Hp_cur/self.EnemyData.Hp_total

    self.Hp_text.text    = self.PlayerData.HP_cur  --[[  .. "/" .. self.PlayerData.Hp_total]]
    self.Hp_text_Bar.fillAmount = self.PlayerData.HP_cur / self.PlayerData.Hp_total
    self.Level_text.text = 1
    
    self.shield_Status = false; --盾的状态
    self.foot_Status   = false; --鞋子状态
    self.is_stopBossRound = false --是否停下怪物当前回合
    self.is_jumpBossRound = false --是否跳过怪物当前回合
    self:_addListener()
     local info = {
         [1] = {type = 18  } --3消回血
        -- ,[2] = {type = 16 }  --3消回盾
        -- ,[3] = {type = 4 } --3消加能量
    --     ,[4] = {type = 3 } --4消回血
    }
    -- 测试专用
    --怪物收到攻击逻辑处理
    LuaTimer.Add(2000,function ()
        self:UpdateRound(info)
    end)
end

function TopFightPanel:_addListener()
    self.winBtn:GetComponent(Button).onClick:AddListener(
        function()
            self:_delectListener()
            MoveToMenu()
        end
    )
    self.LosePanel:GetComponent(Button).onClick:AddListener(
        function()
            self:_delectListener()
            MoveToMenu()
        end
    )
    self.bigattack_btn.onClick:AddListener(
        function ()
            local damage = math.random(5,15)
            self:EnemyGetHit(damage)
        end
    )
end

function TopFightPanel:_delectListener()
    if self._enemyHpLoading then 
        LuaTimer.Delete(self._enemyHpLoading)
        self._enemyHpLoading = nil 
    end
    if self._enemy_Round then 
        LuaTimer.Delete(self._enemy_Round)
    end
    if self.player_MoveTimer then 
        LuaTimer.Delete(self.player_MoveTimer)
    end
    if self.player_AttackTimer then 
        LuaTimer.Delete(self.player_AttackTimer)
    end
    if self._enemyHpLoadin then 
        LuaTimer.Delete(self._enemyHpLoadin)
    end
    if self._BossMove then 
        LuaTimer.Delete(self._BossMove)
    end
end

function TopFightPanel:CallBack()
    XXLPanel:Fall()
end
    
--更新回合数据（通过事件访问）
function TopFightPanel:UpdateRound(info)
    if info == nil then
        Debug.LogError("UpdateRound没有传参")
        return
    end
    if self.bossisDeath then 
        return 
    end 
    local isCallBack = true 
    local CallBackType = 1 --1.为道具回调 ， 2 为攻击回调
    local data = {}
    local times= {[1]=0,[2]=0,[3]=0,[4]=0,[5]=0,[6] = 0 ,[7] = 0 ,[8] = 0 ,[9] = 0 ,[10] = 0 ,[11] = 0 ,[12] = 0 ,[13] = 0 ,[14] = 0 ,[15] = 0 ,[16] = 0 ,[17] = 0 ,[18] = 0}
    local isFirstClick = info.isFirstClick--小小的传参
    for i,v in ipairs(info) do
        if(type(v)=="table")then--小小的修改
            if v.type == 1 then 
                times[1] = times[1] + 1 
            elseif v.type ==2 then 
                times[2] = times[2] + 1
            elseif v.type ==3 then 
                times[3] = times[3] + 1 
            elseif v.type ==4 then 
                times[4] = times[4] + 1 
                CallBackType = 2 
            elseif v.type == 5 then 
                times[5] = times[5]+1 
            elseif v.type == 6 then 
                times[6] = times[6]+1 
            elseif v.type == 7 then 
                times[7] = times[7]+1 
            elseif v.type == 8 then 
                times[8] = times[8]+1 
                CallBackType = 2
            elseif v.type == 9 then 
                times[9] = times[9]+1 
            elseif v.type == 10 then 
                times[10] = times[10]+1 
            elseif v.type == 11 then 
                times[11] = times[11]+1 
            elseif v.type == 12 then 
                times[12] = times[12]+1 
                CallBackType = 2
            elseif v.type ==13 then  --稳态
                times[13] = times[13] + 1
                isCallBack =false  
            elseif v.type ==14 then 
                times[14] = times[14] + 1
            elseif v.type ==15 then 
                times[15] = times[15] + 1
            elseif v.type ==16 then 
                times[16] = times[16] + 1
            elseif v.type ==17 then 
                times[17] = times[17] + 1
                CallBackType = 2
            elseif v.type==18 then
                times[18] = times[17] + 1
                CallBackType = 3
            end
        end--小小的修改
    end
    for i,v in pairs(times) do 
        if v ~= 0 then 
            data[#data+1] = {type = i , time = v}
        end
    end

    if isCallBack then 
        if CallBackType == 2  then 
            local timer06_ = LuaTimer.Add(1500 * (times[4] + times[8] +  times[12] + times[14] +times[16]+  times[17]), function ()
                self:CallBack()
            end)
        elseif CallBackType==3  then
            local timer08_ = LuaTimer.Add(6000,function ()
                self:CallBack()
            end) 
        else
            local timer07_  = LuaTimer.Add(1000, function ()
                self:CallBack()
            end)
        end
    end
    self.attackTime = 0
    self.attackType = {}
    --判断传进来的数据是什么类型
    for i,v in pairs(data) do --遍历数据
        --血量
        if v.type  == 1 or v.type==5 or v.type == 9 then
            --查看是否有护盾buff，不保留
            self.hpAddList = {}
            local addHp = math.floor(self.PlayerData.Hp_total * self.PlayerData.Item.Hp) 
            if v.type == 5 then 
                addHp = math.floor(addHp * 4 / 3 )
            elseif v.type == 9 then 
                addHp = math.floor(addHp * 5 / 3 )
            end
            if self.foot_Status then 
                addHp = math.floor(addHp * self.PlayerData.Foot_cur )
                self.foot_Status = false
            end 
            for i= 1,v.time do 
                if v.type ==1 then 
                    LuaTimer.Add(300*(i-1),function ()
                        self.hpAddList[i] = GameObject.Instantiate(self.hp,self.C_Player.transform)
                        self.hpAddList[i].transform:Find("hpAddText"):GetComponent(Text).text = addHp
                        self.hpAddList[i]:SetActive(true)
                    end )
                else
                    LuaTimer.Add(200*(i),function ()
                        self.hpAddList[i] = GameObject.Instantiate(self.hp,self.C_Player.transform)
                        self.hpAddList[i].transform:Find("hpAddText"):GetComponent(Text).text = addHp
                        self.hpAddList[i]:SetActive(true)
                    end )
                end
            end
            self.PlayerData.HP_cur  = math.ceil(self.PlayerData.HP_cur + (addHp  * v.time))
            --如果血量超过上限
            if self.PlayerData.HP_cur >= self.PlayerData.Hp_total then 
                self.PlayerData.HP_cur = self.PlayerData.Hp_total
            end
            self.Hp_text.text    = self.PlayerData.HP_cur --[[  .. "/" .. self.PlayerData.Hp_total --更新血量 ]]
            self.Hp_text_Bar.fillAmount = self.PlayerData.HP_cur / self.PlayerData.Hp_total
            --播放举剑动画
            self:RoleGetSomeThing()
        --护盾
        elseif v.type == 2 or v.type == 6 or v.type == 10 then
            --增加护盾buff
            self.shield_Status = true
            for i= 1,v.time do 
                --更新当前护盾值
                self.PlayerData.Shield_cur = math.floor(self.PlayerData.Shield_cur * 1.5)
                if self.foot_Status then 
                    self.PlayerData.Shield_cur = math.floor(self.PlayerData.Shield_cur * self.PlayerData.Foot_cur)
                    self.foot_Status =false 
                end
                --如果是四消
                if v.type == 6 then
                    self.PlayerData.Shield_cur = math.floor(self.PlayerData.Shield_cur * 4 / 3)
                --如果是五消
                elseif v.type ==10 then 
                    self.PlayerData.Shield_cur = math.floor(self.PlayerData.Shield_cur * 5 / 3)
                end 
            end
        --鞋子
        elseif v.type == 3 or v.type == 7 or v.type == 11 then
            --如果是玩家消除的，并且是第一个消除的足，怪物会眩晕一个回合
            if i == 1 and isFirstClick then 
                self.is_stopBossRound = true
            end
            --增加鞋子buff
            self.foot_Status = true
            self.PlayerData.Foot_cur =self.PlayerData.Foot_cur * self.PlayerData.Foot_total * v.time
            if v.type == 7 then 
                self.PlayerData.Foot_cur = self.PlayerData.Foot_cur * 4 / 3 
            elseif v.type == 11 then
                self.PlayerData.Foot_cur = self.PlayerData.Foot_cur * 5 / 3 
            end
        --攻击
        elseif v.type == 4 or v.type == 8 or v.type == 12 or v.type==14 or  v.type == 15 or v.type == 16 or v.type == 17  then --14大招血，15大招盾，16大招足
            if v.type == 15 then 
                self.is_jumpBossRound = true
            end
            if v.type == 16 then 
                self.is_stopBossRound = true 
            end 
            --总攻击数
            self.attackTime  = self.attackTime + v.time 
            for i = 1,v.time do
                --每次攻击的类型 ， 保存的顺序 3 - 4 - 5 
                self.attackType[#self.attackType+1] = v.type
            end
        elseif v.type == 13 then
            if self.foot_Status then 
                self.no_stand = true 
            else
                self.no_stand = false
            end
            LuaTimer.Add(500,function ()
                self:EnemyRound()
            end)
        elseif v.type==18  then
            self.bigattack_obj:SetActive(true)
            local timer09_ = LuaTimer.Add(6000,function ()
                self.bigattack_obj:SetActive(false)
            end)
        else
            Debug.LogError("传进来的数据是错的")
        end
    end
    --设置护盾状态图片
    self:SetShieldImage(self.shield_Status)
    --设置鞋子状态图片
    self:SetFootBuffImage(self.foot_Status)
    --玩家攻击
    self:PlayerAttack(self.attackTime)
end

function TopFightPanel:SetShieldImage(state)
    self.Shield:SetActive(state)
    if state then 
        self:RoleGetSomeThing()
    end
end
function TopFightPanel:SetFootBuffImage(state)
    self.Foot:SetActive(state)
    if state then 
        self:RoleGetSomeThing()
    else
        self.PlayerData.Foot_cur = 1
    end
end

function TopFightPanel:RoleGetSomeThing()
    if self.no_stand then 
        return 
    end 
    self.PlayerAnim:SetBool("PlayerFootStage",true)
    LuaTimer.Add(300,function ()
        self.PlayerAnim:SetBool("PlayerFootStage",false)
    end)
end
--玩家攻击逻辑入口，需要把攻击类型和次数传入处理
function TopFightPanel:PlayerAttack(attackTime)
    if attackTime == nil or attackTime == 0  then 
        return 
    end
    for i = 1,attackTime do 
        -- 接下来的逻辑是 ： 向前移动 : 向前移动Timer结束 ：攻击动画 ：攻击 ： 攻击结束 ： 向后移动返回
        local timer10 = LuaTimer.Add(2000*(i-1),function ()
            self:_PlayerAttack(i)
        end)
    end
end

function TopFightPanel:_PlayerAttack(i)
    self.playerMoveCur = self.playerMoveCur or  0  --玩家移动的计数
    self.playerMoveCount=self.playerMoveCount or 20--玩家移动的总步数
    self.playerMoveOffSet = self.playerMoveOffSet or Vector3(20,0,0) 
    self.FireBallStartPosition  = self.FireBallrect.localPosition
    self.playerRoteOffSet = 0
    if self.attackType[i] == 17 or self.attackType[i]==16 or self.attackType[i] ==15 or  self.attackType[i]==14  then 
        self.BigAttack:SetActive(true)
        self.PlayerAnim:SetBool("PlayerBigAttack",true)
        self.player_MoveTimer = LuaTimer.Add(350,10,function()
            self:PlayerAttackForward(i)
        end)
    else
        self.PlayerAnim:SetBool("PlayerAttack",true)
        self.player_MoveTimer = LuaTimer.Add(0,10,function()
            self:PlayerAttackForward(i)
        end)
    end
end

function TopFightPanel:PlayerAttackForward(i)
    if self.playerMoveCount==nil  then 
        Debug.LogError("为调用Update就移动，违法")
    end
    self.playerMoveCur = self.playerMoveCur + 1 

    if self.playerMoveCur < self.playerMoveCount/2 then 
        self.playerRoteOffSet = self.playerMoveCur * 2
    else
        self.playerRoteOffSet = (self.playerMoveCount - self.playerMoveCur) *2
    end
    --向前移动结束
    if self.playerMoveCur ==self.playerMoveCount then 
        self.playerMoveCur =  0  --玩家移动的计时清空
        LuaTimer.Add(300,function ()
            self.PlayerAnim:SetBool("PlayerAttack",false)
        end)
        LuaTimer.Add(600,function ()
            self.PlayerAnim:SetBool("PlayerBigAttack",false)
            self.BigAttack:SetActive(false)
        end)
        self._player_AttackTimer = LuaTimer.Add(100,function()
            self:AttackEnemy(i)
        end)

        if self.player_MoveTimer then   
            LuaTimer.Delete(self.player_MoveTimer)
            -- 攻击怪物
            self.player_MoveTimer = nil
        end
    --移动
    else 
        self.Playerrect.localPosition = self.Playerrect.localPosition + self.playerMoveOffSet
    end
end

function TopFightPanel:PlayerBack()
    if self.playerMoveCount==nil  then 
    end
    self.playerMoveCur = self.playerMoveCur + 1 

    if self.playerMoveCur < self.playerMoveCount/2 then 
        self.playerRoteOffSet = self.playerMoveCur * 2
    else
        self.playerRoteOffSet = (self.playerMoveCount - self.playerMoveCur) *2
    end
    --向前移动结束
    if self.playerMoveCur ==self.playerMoveCount then 
        self.playerMoveCur = 0 
        if self._player_BackMove then 
            LuaTimer.Delete(self._player_BackMove)
            self._player_BackMove = nil 
        end
    else 
        self.Playerrect.localPosition = self.Playerrect.localPosition - self.playerMoveOffSet
    end
end
--怪物受伤害逻辑，通过i和状态去计算damage
function TopFightPanel:AttackEnemy(i)
    if self.playerMoveCount==nil  then 
        Debug.LogError("为调用Update就移动，违法")
    end
    --攻击展示结束
    self.playerMoveCur =  0  --玩家移动的计时清空
    --计算玩家造成伤害
    local damage = 1.25 * self.PlayerData.Power-self.EnemyData.Shield_cur
    if self.attackType[i] ==  8 then 
        damage = math.floor(damage * 4 / 3)
    elseif self.attackType[i] == 12 then 
        damage = math.floor(damage * 5 / 3)
    elseif self.attackType[i] ==14 then 
        damage = math.floor(damage * 1.2)
        --播放回血的动画
        self.GetHpAdd14:SetActive(true)
        local timer22 = LuaTimer.Add(500, function ()
            self.GetHpAdd14:SetActive(false)
        end)
        --实际回血
        self.PlayerData.HP_cur  = self.PlayerData.HP_cur + damage
        --如果血量超过上限
        if self.PlayerData.HP_cur >= self.PlayerData.Hp_total then 
            self.PlayerData.HP_cur = self.PlayerData.Hp_total
        end
        self.Hp_text.text    = self.PlayerData.HP_cur --[[  .. "/" .. self.PlayerData.Hp_total --更新血量 ]]
        self.Hp_text_Bar.fillAmount = self.PlayerData.HP_cur / self.PlayerData.Hp_total

    elseif self.attackType[i] ==15 then 
        damage = -1
        self.GetHitImage4:SetActive(true)
        local timer21 = LuaTimer.Add(500,function ()
            self.GetHitImage4:SetActive(false )
        end)
    elseif self.attackType[i] ==16 then 
        self.GetHitImage8:SetActive(true)
        local timer21 = LuaTimer.Add(500,function ()
            self.GetHitImage8:SetActive(false )
        end)
    elseif self.attackType[i] == 17 then 
        damage = damage * 4
        --播放玩家攻击冲击波
        self.GetHitImage12:SetActive(true)
        local timer20 = LuaTimer.Add(500,function ()
            self.GetHitImage12:SetActive(false )
        end)
    end
    if self.foot_Status then 
        damage = math.floor(damage * self.PlayerData.Foot_cur)
        self.foot_Status =false 
    end
    --怪物收到攻击逻辑处理
    self:EnemyGetHit(damage)
    --玩家退后
    self._player_BackMove = LuaTimer.Add(700,10 ,function ()
        self:PlayerBack()
    end)
    LuaTimer.Add(100,function()
        self.FireBallrect.localPosition = self.FireBallStartPosition
    end)
    if self.player_AttackTimer then
        LuaTimer.Delete(self.player_AttackTimer)
        self.player_AttackTimer = nil
    end
end

function TopFightPanel:EnemyGetHit(damage)
    if damage <= 0 then --说明是盾攻击
        self.BossAnim:SetBool("GetHit",true)
        LuaTimer.Add(500,function()
            self.BossAnim:SetBool("GetHit",false) 
        end)
    else
        --怪物扣血
        self.EnemyData.Hp_cur = self.EnemyData.Hp_cur - damage
        --判断它是否死亡
        if self.EnemyData.Hp_cur <= 0 then
            self.EnemyData.Hp_cur = 0
            --怪物死亡逻辑
            self.bossisDeath = true
            if self._enemy_Round then 
                LuaTimer.Delete(self._enemy_Round)
            end
            LuaTimer.Add(2000,function ()
                self:ShowWin()
            end)
        end
        --Boss被攻击动画
        self.BossAnim:SetBool("GetHit",true)
        self.EnemyGetHitTest.text ="-" .. damage
        local enemyadd = GameObject.Instantiate(self.EnemyGetHitobj,self.Enemy.transform)
        enemyadd:SetActive(true)
        LuaTimer.Add(500,function()
            self.BossAnim:SetBool("GetHit",false) 
            self.EnemyGetHitobj:SetActive(false)
        end)
        self.BossHpText.text = self.EnemyData.Hp_cur     .. "/" .. self.EnemyData.Hp_total
        self.BossHpBar.fillAmount = self.EnemyData.Hp_cur/self.EnemyData.Hp_total
        self._enemyHpLoading = LuaTimer.Add(0,100,function()
            self:EnemyHpLoading()
        end)
    end
end
function TopFightPanel:EnemyHpLoading()
    self.BossHpLoad.fillAmount = self.BossHpLoad.fillAmount - 0.02
    if self.BossHpLoad.fillAmount <= self.BossHpBar.fillAmount then
        if self._enemyHpLoading then  
            LuaTimer.Delete(self._enemyHpLoading)
            self._enemyHpLoading = nil 
        end
    end
end

function TopFightPanel:ShowWin()
    self.WinPanel:SetActive(true)
end

function TopFightPanel:EnemyRound()
    if self.is_jumpBossRound then 
        --怪物的回合数加一
        self.EnemyData.FightRound_cur = (self.EnemyData.FightRound_cur % 8) +1
        self.EnemyNextMoveImage.sprite = Resources.Load("Boss/"..self.EnemyData.FightRound_Move[self.EnemyData.FightRound_cur],Sprite)   
        self.is_jumpBossRound = false
    elseif self.is_stopBossRound then 
        self.is_stopBossRound = false 
        self.shield_Status =false
        --重置防御
        self.PlayerData.Shield_cur = self.PlayerData.Shield_total
    else
        --判断Boss当前的状态
        local state = self.EnemyData.FightRound_Move[self.EnemyData.FightRound_cur]
        if  state == "Attack" or state == "Angry" then 
            --当回合数为0 ， 进入怪物的攻击回合
            self.AttackCountDown:SetActive(false)
            self._BossMove = LuaTimer.Add(200,function ()
                self:BossAttack(state)
                --查看是否有护盾buff，不保留
                if self.shield_Status == true then 
                    self.shield_Status =false
                    --重置防御
                    self.PlayerData.Shield_cur = self.PlayerData.Shield_total
                end 
                self:SetShieldImage(self.shield_Status)
            end)
        elseif state == "Idle" then 
            --怪物的回合数加一
            self.EnemyData.FightRound_cur = (self.EnemyData.FightRound_cur % 8) +1
            self.EnemyNextMoveImage.sprite = Resources.Load("Boss/"..self.EnemyData.FightRound_Move[self.EnemyData.FightRound_cur],Sprite)      
        end
    end
end

function TopFightPanel:BossAttack(state)
    self.PlayerAnim:SetBool("PlayerHit",true)
    self.BossAnim:SetBool("BossAttack",true)
    self.EnemyAttackImage.gameObject:SetActive(true)
    --玩家扣血
    if self.PlayerData.HP_cur <= 0 then 
    else
        --计算伤害量 
        local bossDamage = math.ceil(0.72 * (self.EnemyData.Power - self.PlayerData.Shield_cur ))
        if state == "Angry" then 
            bossDamage = bossDamage * 3
        end
        if bossDamage<= 0 then 
            bossDamage = 0 
        end
        --玩家反击伤害
        local playerDamage = math.ceil(0.2 * (self.PlayerData.Hp_total - self.PlayerData.HP_cur))
        --玩家扣血
        self.PlayerData.HP_cur = self.PlayerData.HP_cur - bossDamage
        self.PlayerAnim:SetBool("PlayerHit",true)
        self.PlayerGetHitTest.text = "-" .. bossDamage
        self.PlayerGetHitobj:SetActive(true)
        LuaTimer.Add(500,function ()
            self.PlayerGetHitobj:SetActive(false)
        end)
        --重置护盾
        self.PlayerData.Shield_cur = self.PlayerData.Shield_total
        if self.PlayerData.HP_cur <= 0 then 
            self.PlayerData.HP_cur = 0 
            self.Hp_text.text = self.PlayerData.HP_cur
            self.Hp_text_Bar.fillAmount = self.PlayerData.HP_cur / self.PlayerData.Hp_total
            self.LosePanel:SetActive(true)
        else
            --玩家血量的显示
            self.Hp_text.text = self.PlayerData.HP_cur
            self.Hp_text_Bar.fillAmount = self.PlayerData.HP_cur / self.PlayerData.Hp_total
            --判断玩家是否会反击
            if self.shield_Status ==true then 
                --玩家反击
                LuaTimer.Add(1000,function ()
                    self.PlayerAnim:SetBool("PlayerHit",false)
                    self.ShieldFightBack:SetActive(true)
                    self.PlayerAnim:SetBool("PlayerAttack2",true)
                    --演示300，怪物受伤！计算
                    LuaTimer.Add(500,function ()
                        self.ShieldFightBack:SetActive(false)
                        self.shield_Status= false
                        --重置防御
                        self.PlayerData.Shield_cur = self.PlayerData.Shield_total
                        self:SetShieldImage(false)
                        self.PlayerAnim:SetBool("PlayerAttack2",false)
                        self:EnemyGetHit(playerDamage)
                    end)
                end)
            else
                --玩家不反击，其实就没事干了
            end
        end
    end
    --怪物的回合数加一
    self.EnemyData.FightRound_cur = (self.EnemyData.FightRound_cur % #self.EnemyData.FightRound_Move) +1
    self.EnemyNextMoveImage.sprite = Resources.Load("Boss/"..self.EnemyData.FightRound_Move[self.EnemyData.FightRound_cur],Sprite)
    LuaTimer.Add(500, function ()
        self.PlayerAnim:SetBool("PlayerHit",false)
        self.BossAnim:SetBool("BossAttack",false)
        LuaTimer.Add(1000,function ()
            --todo:切换Boss的下回合的行动
            self.AttackCountDown:SetActive(true)
        end)
        self.EnemyAttackImage.gameObject:SetActive(false)
    end)
    if self._BossMove then 
        LuaTimer.Delete(self._BossMove)
    end
end
return TopFightPanel